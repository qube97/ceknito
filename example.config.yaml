# Any value in this file can be overridden by an environment variable
# named using the keys, in upper case, joined by underscores.  So for
# example, if the environment variable $SITE_NAME is set, its value
# will be used instead of the site name declared below.

site:
  name: 'čekni.to'
  # Lema shown in the page's title
  lema: 'čekni.to: homepage tvojho internetu'
  # Copyright line shown in the footer
  copyright: '2020 LenOn Productions'

  # Domain name at which the app is being served.  This must be
  # configured for websocket support (chat and push new posts) on
  # Safari and Apple WebKit.  For development, you can omit this.
  #server_name: "throat.example.com"

  # Name shown when a sub is owned by a deleted account or abandoned
  placeholder_account: '[checkedout]'

  # Prefix for subs (by default it's 's').
  # It can be anything EXCEPT 'u', 'c' or 'p'
  sub_prefix: 's'

  # Allow everybody to upload files
  # (by default it's only admins and users authorized through a metadata key)
  allow_uploads: False

  # Minimum level a user must have before being able to upload files.
  # Set to zero to disable file upload level limits
  upload_min_level: 0

  # For those who are allowed to upload files, allow video uploads
  # (.mp4 and .webm) as well.
  allow_video_uploads: True

  # Maximum size of an uploaded file, in bytes.
  upload_max_size: 16777216

  # Allow chat access for all users
  # If True, each user will have the option of disabling chat for themselves
  enable_chat: True

  # Allow all users to view the site log
  # If False, only Admin can view the sitelog
  sitelog_public: True

  # Forces all the sub logs and banned user lists to be public and removes the option to make them private.
  force_sublog_public: True

  # Amount of time in seconds the post author can edit a post's title after the post
  # was created. Set to zero to disable title editing (default is 5 minutes)
  title_edit_timeout: 300

  # If True, enables setting security questions on the admin page.
  # Users will be asked to answer one of these security questions before registering
  enable_security_question: False

  # Only allow Admins to create new subs
  # If True, only admins can create new subs
  sub_creation_admin_only: False

  # Minimum level a user must have before being able to create a sub.
  # Set to zero to disable sub creation level limits
  sub_creation_min_level: 2

  # Minimum level required for a user to be permitted to private message nonprivileged users.
  # Set to zero to allow users of all levels to PM other users.
  # Users of any level may PM site admins.
  send_pm_to_user_min_level: 3

  # Minimum level a user must have before being able to create a sub.
  # Set to zero to disable sub creation level limits
  sub_creation_min_level: 2

  # Allows Sub Mods and Admins to view the edit history of posts
  edit_history: False

  # Removes the name of the Mod or Admin who took action on a post or user in notifications sent to user
  anonymous_modding: False

  # Maximum amount of subs a single user can own.
  # The actual amount of subs a user may register scales with user level (user level minus one)
  # so a level 0 or level 1 user cannot register any subs. This scaling is disabled if `sub_creation_min_level` is zero
  sub_ownership_limit: 20

  # Maximum amount of posts a user can create in a single sub in a day
  daily_sub_posting_limit: 10

  # Maximum amount of posts a user can create in a single day
  daily_site_posting_limit: 25

  # List of links that will be shown in the footer.
  # Privacy and ToS links cannot be removed, and the license link can't be modified
  footer:
    links:
      ToS: '/wiki/tos'
      Privacy: '/wiki/privacy'
      Canary: '/wiki/canary'
      Donate: '/wiki/donate'
      Bugs: 'https://github.com/Phuks-co/throat/issues'

  # Time after which post will be archived
  archive_post_after: 60

  # Number of trusted proxies which set the X-Forwarded-For header
  # ahead of the application.  If you run the application behind
  # a load balancer, this should be set to 1 or more.
  trusted_proxy_count: 0

  # Use a function defined in the database for hot-sorting posts,
  # instead of the default.  This option is not supported for Sqlite.
  # This requires additional database configuration; see README.md for
  # more information.
  custom_hot_sort: False

  recent_activity:
    # Enables or disables the recent activity sidebar and the page in /activity
    enabled: True
    # If true, only show recent activity from default subs in the sidebar (recent activity for all subs will be shown in
    # /activity)
    defaults_only: False
    # If true, only show recent comments (and not posts) in the sidebar
    comments_only: False
    # Number of entries to display in the recenta activity sidebar
    max_entries: 10

auth:
  # Set to LOCAL to store user authentication in database,
  # or KEYCLOAK to use a Keycloak server to authenticate users.
  provider: 'LOCAL'

  # Set to True to require users to provide valid email addresses.
  require_valid_emails: False

  keycloak:
    # URL of the Keycloak server's REST API.
    server: 'http://auth.example.com/auth/'

    # Keycloak realm containing client with power to create users.
    admin_realm: 'master'

    # Keycloak client with power to create users.
    admin_client: 'admin-cli'

    # Keycloak realm for users.
    user_realm: 'example'

    # Keycloak client in user realm with authorization enabled.
    auth_client: 'throatapp'

    # Client credentials grant secrets
    admin_secret: '00000000-0000-0000-0000-000000000000' # secret for admin client
    auth_secret: '00000000-0000-0000-0000-000000000000' # secret for auth client


app:
  # host to pass to SocketIO when we start the application
  host: "localhost"

  # URL to a working redis server.
  # Used for websockets (if enabled)
  redis_url: 'redis://127.0.0.1:6379'

  # Whether to force all traffic to HTTPS.  If you terminate SSL with
  # gunicorn in production you should set this to True.  If you use
  # another server such as nginx or a load balancer to terminate SSL,
  # this should be False.  Ignored in debug mode.
  force_https: False

  # Secret key used to encrypt session cookies.
  # You can generate one by using `os.urandom(24)`
  # ///// YOU MUST CHANGE THIS VALUE \\\\\
  secret_key: 'PUT SOMETHING HERE'

  # Enables debug mode. Always set to False in a production environment
  debug: True

  # This will make all captchas valid and disable caching
  # Always set to False in a production environment
  development: True

  # Available languages for users to select. This will also be used when trying to guess
  # the user's language.
  languages:
    - en
    - sk
    - es
    - ru
    - sk

  # Fallback language when there is no accept-language header sent by the browser
  fallback_language: 'sk'

  # Max video upload size 10MB
  max_content_length: 10485760

cache:
  # Caching strategy to use.
  # Recommended values:
  # - 'null' (no caching)
  # - 'redis' (recommended)
  # - 'simple' (only for testing)
  type: 'redis'

  # Redis to use for caching (if enabled)
  redis_url: 'redis://127.0.0.1:6379'

mail:
  # At the moment this is only used to send password recovery
  # emails.
  # Set these fields according to the instructions from your email
  # provider.
  server: smtp.example.com
  port: 587
  use_tls: True
  username: throat
  password: pass1234
  # Sender address
  default_from: ''
  # recipient address
  default_to: ''
storage:
  # One of: LOCAL, S3, S3_US_WEST, S3_US_WEST_OREGON, S3_EU_WEST,
  # S3_AP_SOUTHEAST, S3_AP_NORTHEAST, GOOGLE_STORAGE, AZURE_BLOBS,
  # CLOUDFILES
  provider: 'LOCAL'

  # For cloud providers, uncomment and set these:
  #key: '...'
  #secret: '...'
  #container: '...'

  # Access control for cloud providers.  Options are "public-read",
  # "private", or blank for no access control.
  # acl: private

  # If the provider is local, and you want Throat to serve the files
  # instead of setting up nginx or another web server to do so,
  # uncomment these.  The server_url is the relative endpoint for the
  # files.  The thumbnails and uploads paths must be the same for the
  # local server to serve both.  Serving files from Throat is not
  # recommended for production, but may be useful for development.
  #server: True
  #server_url: '/files'

  thumbnails:
    # Path where thumbnails will be stored (app MUST have write access)
    path: './app/static/thumbs'
    # URL or relative path where thumbnails are served (must end with forward slash). If hosting on the same domain, URL should also have 'static' in it, e.g.  'http://192.168.0.82/static/thumbs/'
    url: ''
  
  uploads:
    # Same rules as thumbnails
    path: './app/static/ups'
    url: ''

database:
  # Database engine. Possible values:
  # - MySQLDatabase
  # - PostgresqlDatabase
  # - SqliteDatabase (untested)
  engine: 'PostgresqlDatabase'
  
  # Parameters for both MySQL and postgres
  host: 'localhost'
  port: 5432
  #user: ''
  #password: ''
  # Database name
  #name: ''

  # For sqlite:
  #database: '/path/to/sqlite.db'

  # Uncomment if using Postgres, to prevent transactions with errors from
  # killing other unrelated transactions.
  #autorollback: True

  # Uncomment if using MySQL
  #charset: 'utf8mb4'

ratelimit:
  # Rate limiting configuration is not required, but all configuration
  # variables for flask-limiter may be set here (in lowercase and
  # without the RATELIMIT_ prefix).  See
  # https://flask-limiter.readthedocs.io/en/stable/#configuration.

  # Uncomment to disable rate limiting (recommended to leave it on in
  # production).
  #enabled: False

logging:
  # Configuration for logging.  This section is optional.
  # See the Python documentation for logging.config.
  version: 1
  handlers:
    console:
      class: logging.StreamHandler
      formatter: basic
  formatters:
    basic:
      format: '%(levelname)s:%(name)s:%(request.remote_addr)s:%(request.method)s %(request.path)s:%(message)s'
  loggers:
    engineio.server:
      level: WARNING
    socketio.server:
      level: WARNING
    peewee:
      handlers:
        - console
    flask.app:
      level: DEBUG
    flask.app.socketio:
      level: WARNING
    flask-limiter:
      level: WARNING
      handlers:
        - console
    geventwebsocket.handler:
      level: WARNING
  root:
    level: DEBUG
    handlers:
      - console
